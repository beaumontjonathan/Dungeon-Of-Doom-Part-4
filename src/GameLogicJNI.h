/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class GameLogicJNI */

#ifndef _Included_GameLogicJNI
#define _Included_GameLogicJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     GameLogicJNI
 * Method:    addDoDPlayer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GameLogicJNI_addDoDPlayer
  (JNIEnv *, jobject, jint);

/*
 * Class:     GameLogicJNI
 * Method:    getSpawnLocation
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_GameLogicJNI_getSpawnLocation
  (JNIEnv *, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    processCommand
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GameLogicJNI_processCommand
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     GameLogicJNI
 * Method:    gameRunning
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_GameLogicJNI_gameRunning
  (JNIEnv *, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    hello
 * Signature: (LDoDPlayer;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GameLogicJNI_hello
  (JNIEnv *, jobject, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    move
 * Signature: (LDoDPlayer;C)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GameLogicJNI_move
  (JNIEnv *, jobject, jobject, jchar);

/*
 * Class:     GameLogicJNI
 * Method:    isAnotherPlayerOccupyingTile
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_GameLogicJNI_isAnotherPlayerOccupyingTile
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GameLogicJNI
 * Method:    look
 * Signature: (LDoDPlayer;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GameLogicJNI_look
  (JNIEnv *, jobject, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    getVisibleOpponents
 * Signature: ([[CLDoDPlayer;)[[C
 */
JNIEXPORT jobjectArray JNICALL Java_GameLogicJNI_getVisibleOpponents
  (JNIEnv *, jobject, jobjectArray, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    pickup
 * Signature: (LDoDPlayer;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_GameLogicJNI_pickup
  (JNIEnv *, jobject, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    checkWin
 * Signature: (LDoDPlayer;)Z
 */
JNIEXPORT jboolean JNICALL Java_GameLogicJNI_checkWin
  (JNIEnv *, jobject, jobject);

/*
 * Class:     GameLogicJNI
 * Method:    quitGame
 * Signature: (LDoDPlayer;)V
 */
JNIEXPORT void JNICALL Java_GameLogicJNI_quitGame
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
